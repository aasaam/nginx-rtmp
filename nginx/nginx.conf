daemon off;
worker_processes ${ASM_NGX_RMTP_WORKER_PROCESSES};
worker_rlimit_nofile ${ASM_NGX_RMTP_WORKER_RLIMIT_NOFILE};
error_log /dev/stdout ${ASM_NGX_RMTP_ERROR_LOG_LEVEL};

events {
  worker_connections ${ASM_NGX_RMTP_WORKER_CONNECTIONS};
  use epoll;
  multi_accept on;
}

rtmp {
  log_format rtmp_jsonlog escape=json '{"ip":"$remote_addr",'
    '"bytes_sent":"$bytes_sent",'
    '"bytes_received":"$bytes_received",'

    '"node":"${ASM_NODE_ID}",'
    '"op":"rtmp_tcp",'

    '"session_time":"$session_time",'

    '"rtmp_app":"$app",'
    '"rtmp_name":"$name",'
    '"rtmp_args":"$args",'
    '"rtmp_flashver":"$flashver",'
    '"rtmp_swfurl":"$swfurl",'
    '"rtmp_tcurl":"$tcurl",'
    '"rtmp_pageurl":"$pageurl",'
    '"rtmp_command":"$command"}';

  ${ASM_NGX_RMTP_ACCESS_LOG_COMMENT} access_log /dev/stdout rtmp_jsonlog;

  server {

    listen 1935;
    chunk_size ${ASM_NGX_RMTP_SERVER_CHUNK_SIZE};
    wait_video on;
    meta off;
    buflen ${ASM_NGX_RMTP_SERVER_BUFLEN};
    idle_streams off;
    timeout ${ASM_NGX_RMTP_SERVER_TIMEOUT};
    drop_idle_publisher ${ASM_NGX_RMTP_SERVER_DROP_IDLE_PUBLISHER};

    application live {
      live on;

      # for check authentication and etc...
      on_publish ${ASM_NGX_RMTP_APP_LIVE_ON_PUBLISH};

      exec ffmpeg -i rtmp://localhost:1935/live/$name
        -c:a libfdk_aac -b:a 128k -c:v libx264 -b:v 2048k -f flv -g 30 -r 30 -s 1280x720 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_720p
        -c:a libfdk_aac -b:a 96k -c:v libx264 -b:v 1024k -f flv -g 25 -r 25 -s 854x480 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_480p
        -c:a libfdk_aac -b:a 48k -c:v libx264 -b:v 256k -f flv -g 15 -r 15 -s 426x240 -preset superfast -profile:v baseline rtmp://localhost:1935/hls/$name_240p;
    }

    application hls {
      live on;
      hls on;
      hls_fragment_naming system;
      hls_fragment ${ASM_NGX_RMTP_APP_HLS_HLS_FRAGMENT};
      hls_playlist_length ${ASM_NGX_RMTP_APP_HLS_HLS_PLAYLIST_LENGTH};
      hls_continuous on;
      hls_fragment_naming_granularity 1000;
      hls_fragment_slicing aligned;
      hls_path /storage/live;
      hls_nested on;

      hls_variant _720p BANDWIDTH=2176000,RESOLUTION=1280x720;
      hls_variant _480p BANDWIDTH=1120000,RESOLUTION=854x480;
      hls_variant _240p BANDWIDTH=304000,RESOLUTION=426x240;
    }
  }
}

http {
  error_log /dev/stdout ${ASM_NGX_RMTP_ERROR_LOG_LEVEL};

  include /defaults/mime.types.conf;
  include /defaults/charset.conf;
  include /defaults/gzip.conf;
  include /defaults/http.conf;

  log_format http_jsonlog escape=json '{"ip":"$remote_addr",'
    '"bytes_sent":"$bytes_sent",'
    '"body_bytes_sent":"$body_bytes_sent",'

    '"node":"${ASM_NODE_ID}",'
    '"op":"rtmp_http",'

    '"sent_http_content_type":"$sent_http_content_type",'
    '"sent_http_content_length":"$sent_http_content_length",'
    '"request_uri":"$request_uri",'
    '"request_length":"$request_length",'
    '"status":$status}';

  ${ASM_NGX_RMTP_ACCESS_LOG_COMMENT} access_log /dev/stdout http_jsonlog;

  server {
    listen 80 default_server;

    root /www;

    server_name _;

    #####################
    # private locations #
    #####################
    location /stat {
      rtmp_stat all;
      rtmp_stat_stylesheet stat.xsl;
    }

    location /stat.xsl {
      root /www;
    }

    location /control {
      rtmp_control all;
    }

    ####################
    # public locations #
    ####################
    location /live {
      include /defaults/cors.conf;
      alias /storage/live;
    }
  }
}
